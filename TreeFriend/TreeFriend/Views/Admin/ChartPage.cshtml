@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<link rel="stylesheet" href="~/css/Admin/ChartPage.css" />

<div id="chartDiv" class="container-fluid overflow-auto">
    <div class="today-info row justify-content-around text-center m-0">
        <div class="info-item col-4 d-flex align-items-center justify-content-center">
            <img src="~/icon/sales.png" alt="">
            <div class="d-flex flex-column fs-4 text-start ps-2">
                <span>{{todayInfo.sales}}</span>
                <span class="fs-6 sub-title">今日銷售</span>
            </div>
        </div>
        <div class="info-item col-4 d-flex align-items-center justify-content-center">
            <img src="~/icon/todayPost.png" alt="">
            <div class="d-flex flex-column fs-4 text-start ps-2">
                <span>{{todayInfo.postCount}}</span>
                <span class="fs-6 sub-title">今日貼文</span>
            </div>
        </div>
        <div class="info-item col-4 d-flex align-items-center justify-content-center">
            <img src="~/icon/newMember.png" alt="">
            <div class="d-flex flex-column fs-4 text-start ps-2">
                <span>{{todayInfo.memberCount}}</span>
                <span class="fs-6 sub-title">新增會員</span>
            </div>
        </div>
    </div>
    <div class="today-info today-chart row m-0 mt-4 justify-content-around">
        <div class="col-3">
            <canvas id="myPie"></canvas>
        </div>
        <div class="col-7">
            <canvas id="myBar"></canvas>
        </div>
    </div>
</div>
<script>

    let chartApp = new Vue({
        el:"#chartDiv",
        data:{
            todayInfo:{
                sales: "",
                postCount:"",
                memberCount:""
            },
            pieData:{
                labels: [],
                datasets: [{
                        label: '分類貼文總數',
                        data: [],
                        backgroundColor: [],
                        hoverOffset: 4
                }]
            },
            barData:{
                labels: [],
                datasets: [{
                    label: '標籤貼文總數',
                    data: [],
                    backgroundColor: [],
                    borderColor: [],
                    borderWidth: 1
                }]
            }
        },
        mounted: function() {
            this.getInfo();
        },
        methods:{
            getInfo: async function(){
                const todayInfo = this.todayInfo;

                const pieLabel = this.pieData.labels;
                const pieData = this.pieData.datasets[0].data;
                const pieColor = this.pieData.datasets[0].backgroundColor;

                const barLabel = this.barData.labels;
                const barData = this.barData.datasets[0].data;
                const barColor = this.barData.datasets[0].borderColor;
                const borderColor = this.barData.datasets[0].backgroundColor;
                
                const get = await axios.get("../Api/Chart/GetTodayInfo");
                const {data} = get;
                const {sales,postCount, memberCount} = data;

                this.todayInfo.sales = sales;
                this.todayInfo.postCount = postCount;
                this.todayInfo.memberCount = memberCount;

                for(let i of data.categoryPostList){
                    pieLabel[pieLabel.length] = i.category;
                    pieData[pieData.length] = i.count;
                    pieColor[pieColor.length] = this.getRandomColor();
                }
                for(let i of data.hashtagPostList){
                    barLabel[barLabel.length] = i.category;
                    barData[barData.length] = i.count;
                    barColor[barColor.length] = this.getRandomColor();
                    borderColor[borderColor.length] = this.getRgbaColor(barColor[barColor.length-1]);
                }
                console.log(this.barData)
                const myPie = this.setChart("doughnut",this.pieData,"myPie");
                const myBar = this.setChart("bar",this.barData,"myBar");
            },
            setChart: function(type,data,element){
                const config = {
                    type: type,
                    data: data,
                };

                if(type === "bar"){
                    config.options = {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                }
                console.log(config)
                return new Chart(
                    document.getElementById(element),
                    config
                );
            },
            getRandomColor: function(){
                var letters = '0123456789ABCDEF'.split('');
                var color = '#';
                for (var i = 0; i < 6; i++ ) {
                    color += letters[Math.floor(Math.random() * 16)];
                }
                return color;
            },
            getRgbaColor: function(hex) {
                // 將hex顏色轉成rgb
                let RGBA = "rgba(" + parseInt("0x" + hex.slice(1, 3)) + "," + parseInt("0x" + hex.slice(3, 5)) + "," + parseInt( "0x" + hex.slice(5, 7)) + ", 0.2)";
                return RGBA;
            }
        }
    });
</script>