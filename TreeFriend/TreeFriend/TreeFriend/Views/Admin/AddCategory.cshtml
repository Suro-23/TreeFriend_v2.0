@{
    Layout = "_AdminLayout";
}
<link rel="stylesheet" href="~/css/Admin/addCategory.css">


<div class="item" id="category">
    <div class="item-head">
        <label for="category-name">分類 :</label>
        <input type="text" id="input-category" v-model="category.categoryName" v-on:blur="checkName">
        <button id="btn-category" v-on:click="addCategory">新增</button>
        <label id="error-msg" v-if="isExists">類別已存在</label>
    </div>
    <table>
        <thead>
            <tr>
                <th class="tb-id">ID</th>
                <th class="tb-name">分類名稱</th>
                <th class="tb-user">管理員</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <tr v-for="item in resultList">
                <td class="tb-id">{{item.categoryId}}</td>
                <td class="tb-name">{{item.categoryName}}</td>
                <td class="tb-user">{{item.userId}}</td>
                <td class="tb-btn">
                    <button>edit</button>
                    <button v-on:click="deleteCategory" v-bind:value="item.categoryId">x</button>
                </td>
            </tr>
        </tbody>
    </table>
</div>
<div class="item" id="hashtag">
    <div class="item-head">
        <label for="input-hashtag">標籤 :</label>
        <input type="text" id="input-hashtag" v-model="hashtag.hashtagName" v-on:blur="checkName">
        <button id="btn-hashtag" v-on:click="addHashtag">新增</button>
        <label id="error-msg" v-if="isExists">標籤已存在</label>
    </div>
    <table>
        <thead>
            <tr>
                <th class="tb-id">ID</th>
                <th class="tb-name">標籤名稱</th>
                <th class="tb-user">管理員</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <tr v-for="item in resultList">
                <td class="tb-id">{{item.hashtagId}}</td>
                <td class="tb-name">{{item.hashtagName}}</td>
                <td class="tb-user">{{item.userId}}</td>
                <td class="tb-btn">
                    <button>edit</button>
                    <button v-on:click="deleteHashtag" v-bind:value="item.hashtagId">x</button>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<script>
    let getAll= function (e,name) {
                const self = e;
                axios.get(`../Api/Category/GetAll${name}`)
                    .then(res => {
                        self.resultList = res.data;
                        console.log(self.resultList);
                    })
            }


    //分類區塊
    let appCategory = new Vue({
        el: "#category",
        data: {
            resultList:[],
            category:{
                categoryName: "",
                //userId: "4",
            },
            isExists: false
        },
        mounted:function(){
            getAll(this,"category");
        },
        methods:{
            //驗證類別是否存在
            checkName: function(){
                const btn = document.querySelector("#btn-category")
                const self = this;
                axios.get(`../Api/Category/CheckCategory/?categoryName=${self.category.categoryName}`)
                .then(res =>{
                    console.log(res);
                    if(res.data === true){
                        //如果存在的話把按鈕禁用
                        self.isExists = true;
                        btn.disabled = true;
                    }else {
                        self.isExists = false;
                        btn.disabled = false;
                    }
                })
                .catch(err => console.log(err));
            },
            addCategory: function(){
                const self = this;
                axios.post("../Api/Category/AddCategory",self.category)
                .then(res =>{
                    if(res.data === true){
                        alert(`類別 : ${self.category.categoryName}，新增成功`)
                        getAll(self,"category");
                        self.category.categoryName =""
                    }else {
                        alert("新增失敗");
                    }
                })
                .catch(err => console.log(err));
            },
            deleteCategory: function (event) {
                const self = this;
                const categoryId = event.target.value;
                console.log(categoryId);
                axios.delete(`../Api/Category/DeleteCategory/?categoryId=${categoryId}`)
                    .then(res => {
                        if (res.data === true) {
                            alert("類別刪除成功!");
                            getAll(self,"category");
                        }else {
                            alert("類別刪除失敗!");
                        }
                    }
                    ).catch(err => console.log(err));
            }
        }
    });


    //標籤區塊
    let appHashtag = new Vue({
        el: "#hashtag",
        data: {
            resultList:[],
            hashtag:{
                hashtagName: "",
                //userId: "4",
            },
            isExists: false
        },
        mounted: function(){
            getAll(this,"hashTag");
        },
        methods:{
            //驗證類別是否存在
            checkName: function(){
                const btn = document.querySelector("#btn-hashtag")
                const self = this;
                axios.get(`../Api/Category/CheckHashTag/?hashtagName=${self.hashtag.hashtagName}`)
                .then(res =>{
                    console.log(res);
                    if(res.data === true){
                        //如果存在的話把按鈕禁用
                        self.isExists = true;
                        btn.disabled = true;
                    }else {
                        self.isExists = false;
                        btn.disabled = false;
                    }
                })
                .catch(err => console.log(err));
            },
            addHashtag: function(){
                const self = this;
                axios.post("../Api/Category/AddHashtag",self.hashtag)
                .then(res =>{
                    if(res.data === true){
                        alert(`類別 : ${self.hashtag.hashtagName}，新增成功`)
                        getAll(self,"hashtag");
                        self.hashtag.hashtagName ="";
                    }else {
                        alert("新增失敗");
                    }
                })
                .catch(err => console.log(err));
            },
            deleteHashtag: function (event) {
                const self = this;
                const hashtagId = event.target.value;
                console.log(hashtagId);
                axios.delete(`../Api/Category/DeleteHashtag/?hashtagId=${hashtagId}`)
                    .then(res => {
                        if (res.data === true) {
                            alert("類別刪除成功!");
                            getAll(self,"hashTag");
                        }else {
                            alert("類別刪除失敗!");
                        }
                    }
                    ).catch(err => console.log(err));
            }
        }
    });
</script>