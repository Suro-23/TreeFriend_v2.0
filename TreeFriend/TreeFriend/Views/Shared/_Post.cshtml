<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - TreeFriend</title>
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.26.1/axios.min.js" integrity="sha512-bPh3uwgU5qEMipS/VOmRqynnMXGGSRv+72H/N260MQeXZIK4PG48401Bsby9Nq5P5fz7hy5UGNmC/W1Z51h2GQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link href="~/css/Layout/Post.css" rel="stylesheet" />
    @*<link rel="stylesheet" href="~/css/Reset.css" />*@
    @*<link rel="stylesheet" href="~/css/HomePage.css" />*@
    @*<link rel="stylesheet" href="~/css/site.css" />*@
</head>
<body>
    <nav id="header-nav" class="navbar navbar-expand-lg navbar-light header-bg">
        <div class="container-fluid">
            <a href="@Url.Action("HomePage","Home")" class="aline">
                <div class="d-flex align-items-center">
                    <img src="/img/logo1.png" alt="" class="logo">
                    <span class="treefriend">Tree<span class="friend">Friend</span></span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavDropdown"
                    aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNavDropdown">
                <ul class="navbar-nav d-flex align-items-center">
                    @if (User.IsInRole("Admin")) {
                        <li class="nav-item">
                            <a class="nav-link" href="@Url.Action("AddCategory","Admin")">管理員</a>
                        </li>
                    }
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("LectureList","Home")">講座</a>
                    </li>
                    @{
                        if (Context.User.Identity.IsAuthenticated) {
                            var imgPath = Context.User.Claims.FirstOrDefault(c => c.Type == "Headshot").Value;

                            <li class="nav-item dropdown d-flex align-items-center">
                                <a class="nav-link dropdown-toggle head-area" href="#" id="navbarDropdownMenuLink" role="button"
                               data-bs-toggle="dropdown" aria-expanded="false">
                                    <img class="headshot" src="@imgPath" alt="">
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdownMenuLink">
                                    <li><a class="dropdown-item" href="@Url.Action("MemberInfo","Home")">基本資料</a></li>
                                    <li><a class="dropdown-item" href="@Url.Action("AddSkillPostPage","Home")">交換技能</a></li>
                                    <li><a class="dropdown-item" v-on:click="logout">登出</a></li>
                                </ul>
                            </li>
                        } else {
                            <li class="nav-item">
                                <a class="nav-link" href="@Url.Action("Create","Register")">登入</a>
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
    </nav>

    @*左側選單列表*@
    <div class="container">
        <div class="row justify-content-center">
            <div class="member-div col-2 member-nav-list" id="categoryList">
                <div class="member-header-text">
                    <div class="col text-center">貼文分類</div>
                </div>
                <div :class="{isCheck:item.isCheck}" class="form-check row" v-for="item in categoryList">
                    <input v-model="checkId" :id="`radio-${item.categoryId}`" :value="item.categoryId" @@change="categoryChange(item.categoryId)" class="form-check-input" type="radio" name="categoryRadio" :checked="item.isCheck">
                    <label class="form-check-label" :for="`radio-${item.categoryId}`">
                        {{item.categoryName}}
                    </label>
                </div>
            </div>
            <div class="member-div col-8 member-content">
                @RenderBody()
            </div>
        </div>
    </div>

    @await RenderSectionAsync("Scripts", required: false)
</body>
<script>
    let header = new Vue({
        el:"#header-nav",
        methods:{
            logout: function(){
                axios.get("../Register/Logout")
                .then(res => {
                    window.location.href=res.data;
                });
            }
        }
    });

    let category = new Vue({
        el:"#categoryList",
        data:{
            categoryList:[],
            checkId:""
        },
        mounted: function(){
            const self = this;
            axios.get("../Api/Category/GetAllCategory")
            .then(res => {
                self.categoryList = res.data;
                self.categoryList.unshift({
                    categoryId : 0,
                    categoryName : "全部"
                });
                for(let c of self.categoryList){
                    c.isCheck = false;
                }
                self.categoryList[0].isCheck = true;
                self.checkId = self.categoryList[0].categoryId;
            }).catch(err => console.log(err));
        },
        methods:{
            categoryChange: function(e){
                this.categoryList.forEach(
                    (item) =>{
                        item.isCheck = false;
                        if(item.categoryId == e){
                            item.isCheck = true;
                        }
                    }
                )
                axios.get(`../Api/SkillPost/GetAllSkillPost/?cId=${e}`)
                .then(res => {
                    allSkillPostApp.skillPostList = res.data;
                })
                console.log(e);
            }
        }
    });
</script>
</html>
