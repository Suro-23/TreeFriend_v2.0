
@{
    Layout = "_Member";
}
<link href="https://fonts.googleapis.com/css?family=Material+Icons|Material+Icons+Outlined|Material+Icons+Two+Tone|Material+Icons+Round|Material+Icons+Sharp" rel="stylesheet">

<style>
    .page-item.active .page-link {
        background-color: cadetblue;
        border-color: aliceblue;
    }
</style>

<fieldset id="od">
    <div class="table-responsive mt-5 me-5">
        <table class="table table-hover table-sm align-middle ">
            <thead>
                <tr>
                    <th scope="col">編號</th>
                    <th scope="col">訂單編號</th>
                    <th scope="col">購買日期</th>
                    <th scope="col">講座資訊</th>
                    <th scope="col">總金額</th>
                    <th scope="col">付款狀態</th>
                    <th scope="col">訂單狀態</th>
                    <th scope="col">使用方式</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="(item,index) in orderList.slice(pageStart, pageStart + countOfPage)" :key="index">
                    <td>{{(currPage-1)*countOfPage + index + 1}}</td> 
                    <td>{{item.orderDetailId}}</td>
                    <td class="col-2">{{item.createDate}}</td>
                    <td class="col-2">
                        <div class="d-flex align-items-center">
                            @*<span class="material-icons-outlined">category</span>*@{{item.theme}} @*<span class="material-icons-sharp " style="color:#db5a6b">location_on</span>{{item.venue}}*@
                        </div>
                        <div class="d-flex align-items-center">
                            @*<span class="material-icons-sharp me-1">schedule</span>*@{{item.eventDate}} {{item.eventTimeStart}}-{{item.eventTimeEnd}}
                        </div>
                        <div class="d-flex align-items-center">
                            <span class="material-icons-sharp " style="color:#db5a6b">location_on</span>{{item.venue}}
                        </div>

                        <div>
                            NT${{item.price}}×{{item.count}}
                        </div>
                    </td>
                    <td>NT${{item.totoalAmount}}</td>
                    <td v-if="item.paymentStatus">付款成功</td>
                    <td v-else="item.paymentStatus">未付款</td>
                    <td v-if="item.orderStatus">成立</td>
                    <td v-else="item.orderStatus">訂單不成立</td>
                    @*<td><img :src="item.speakerImgPath" style="max-height:50px" /></td>*@
                    <td v-if="item.orderStatus">電子憑證已Email至信箱<br/>現場請出示該憑證</td>
                    <td v-else="item.orderStatus"></td>
                </tr>
            </tbody>
        </table>
    </div>
   

    <div class="d-flex justify-content-center" >
        <nav aria-label="Page navigation example">
            <ul class="pagination pagination-sm ">
                <li class="page-item" v-bind:class="{'disabled': (currPage === 1)}"
                    @@click.prevent="setPage(currPage-1)">
                    <a class="page-link" href="#" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>

                <li class="page-item" v-for="n in totalPage"
                    v-bind:class="{'active': (currPage === (n))}"
                    @@click.prevent="setPage(n)"><a class="page-link" href="#">{{n}}</a></li>

                <li class="page-item" v-bind:class="{'disabled': (currPage === totalPage)}"
                    @@click.prevent="setPage(currPage+1)">
                    <a class="page-link" href="#" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>

            </ul>
        </nav>
    </div>

</fieldset>


<script>
    let odapp = new Vue({
        el: '#od',
        data: {
            orderList: [],
            countOfPage: 10,
            currPage: 1,
            
        },
        mounted: function () {
            let self = this;
            axios.get("../Api/Member/GetOrderHistory").then(function (res) {
                self.orderList = res.data;
                console.log(res.data);
            })
        },
        computed: {
            pageStart: function () {
                return (this.currPage - 1) * this.countOfPage;
            },
            totalPage: function () {
                return Math.ceil((this.orderList.length / this.countOfPage))
            }
        },
        methods: {
            setPage: function (idx) {
                if (idx <= 0 || idx > this.totalPage) {
                    return;
                }
                this.currPage = idx;
            }
        }



    });
</script>
